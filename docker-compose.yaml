version: '3.8'

services:
  logistic-db:
    image: postgres
    container_name: logistic-db
    networks:
      - backend
    environment:
      POSTGRES_DB: logistic
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - logisticstorage:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  logistic-zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: logistic-zookeeper
    networks:
      - backend
    ports:
      - "2181:2181"
    volumes:
      - zoostorage:/data

  logistic-kafka:
    image: wurstmeister/kafka:latest
    container_name: logistic-kafka
    networks:
      - backend
    ports:
      - "9093:9093"
    environment:
      KAFKA_LISTENERS: "INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://logistic-kafka:9092,EXTERNAL://localhost:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_CONNECT: "logistic-zookeeper:2181"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    volumes:
      - kafkastorage:/kafka
    depends_on:
      - logistic-zookeeper
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  logistic-kafka-ui:
    image: obsidiandynamics/kafdrop
    container_name: logistic-kafka-ui
    networks:
      - backend
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "logistic-kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXT_PATH: "/"
    depends_on:
      - logistic-kafka

  cargo-contract-service:
    image: sergeyignatyuk/cargo-contract-service:latest
    container_name: cargo-contract-service
    networks:
      - backend
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://logistic-db:5432/logistic
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: logistic-kafka:9092
    depends_on:
      logistic-db:
        condition: service_healthy
      logistic-kafka:
        condition: service_healthy

networks:
  backend:
    driver: bridge

volumes:
  logisticstorage:
  zoostorage:
  kafkastorage:
